from aima.search import *


romania_map = UndirectedGraph(dict(
    Arad=dict(Zerind=75, Sibiu=140, Timisoara=118),
    Bucharest=dict(Urziceni=85, Pitesti=101, Giurgiu=90, Fagaras=211),
    Craiova=dict(Drobeta=120, Rimnicu=146, Pitesti=138),
    Drobeta=dict(Mehadia=75),
    Eforie=dict(Hirsova=86),
    Fagaras=dict(Sibiu=99),
    Hirsova=dict(Urziceni=98),
    Iasi=dict(Vaslui=92, Neamt=87),
    Lugoj=dict(Timisoara=111, Mehadia=70),
    Oradea=dict(Zerind=71, Sibiu=151),
    Pitesti=dict(Rimnicu=97),
    Rimnicu=dict(Sibiu=80),
    Urziceni=dict(Vaslui=142)))


def h(node):
    locs = dict(Arad=366, Bucharest=0, Craiova=160, Drobeta=242, Eforie=161, Fagaras=176, Giurgiu=77, Hirsova=151,
                Iasi=226, Lugoj=244, Mehadia=241, Neamt=234, Oradea=380, Pitesti=100, Rimnicu=193, Sibiu=253,
                Timisoara=329, Urziceni=80, Vaslui=199, Zerind=374)
    return locs[node.state]


romania_problem = GraphProblem('Arad', 'Bucharest', romania_map)


resultado = astar_search(romania_problem, h)


print("Caminho encontrado:", resultado.path())
print("Custo do caminho:", resultado.path_cost)
